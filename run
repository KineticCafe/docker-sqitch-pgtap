#! /bin/bash

declare image var cmd
image=${IMAGE:-kineticcafe/sqitch-pgtap:latest}

if ((!$#)); then
  echo >&2 "No command given."
  exit 1
fi

case "$1" in
sqitch) cmd=/home/sqitcher/bin/do_sqitch ;;
pg_prove) cmd=/home/sqitcher/bin/do_pg_prove ;;
pgtap) cmd=/home/sqitcher/bin/do_pgtap ;;
createdb | dropdb | psql) cmd="$1" ;;
pg_config | pg_controldata | pg_ctl) cmd="$1" ;;
pg_archivecleanup | pg_basebackup) cmd="$1" ;;
pg_dump | pg_dumpall | pg_restore) cmd="$1" ;;
pg_isready | pg_standby | pg_test_fsync | pg_test_timing) cmd="$1" ;;
pg_recvlogical | pg_rewind | pg_upgrade) cmd="$1" ;;
pg_receivexlog | pg_resetxlog | pg_xlogdump) cmd="$1" ;;
*)
  echo "Unknown command '$1'."
  exit 1
  ;;
esac

shift

declare -a passenv

: PGHOST="${PGHOST:-host.docker.internal}"
: PGPORT="${PGPORT:-5432}"

if [[ "$(uname -s)" == Darwin ]]; then
  PGUSER="${PGUSER:-${USER}}"
fi

for var in \
  PGUSER PGPASSWORD PGHOST PGHOSTADDR PGPORT PGDATABASE PGSERVICE \
  PGOPTIONS PGSSLMODE PGREQUIRESSL PGSSLCOMPRESSION PGREQUIREPEER \
  PGKRBSRVNAME PGKRBSRVNAME PGGSSLIB PGCONNECT_TIMEOUT PGCLIENTENCODING \
  PGTARGETSESSIONATTRS; do
  [[ ! -z "${!var}" ]] && passenv+=("-e" "$var=${!var}")
done

docker run -it --rm --network host \
  --mount "type=bind,src=$(pwd),dst=/repo" \
  --mount "type=bind,src=${HOME},dst=/root" \
  "${passenv[@]}" "${image}" "${cmd}" "$@"
